package md.ibanc.rm.entities;
// Generated Aug 24, 2016 4:57:31 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Accounts generated by hbm2java
 */
@Entity
@Table(name = "accounts", schema = "public"
)
public class Accounts implements java.io.Serializable {

    private long id;
    private Branches branches;
    private Status status;
    private Types types;
    private Valuta valuta;
    private String codIban;
    private Date openDate;
    private Date closeDate;
    private BigDecimal balance;
    private Boolean hiden;
    private Set<Transactions> transactionses = new HashSet<>(0);
    private Set<Cards> cardses = new HashSet<>(0);
    private Set<CustomerAccount> customerAccounts = new HashSet<>(0);

    public Accounts() {
    }

    public Accounts(long id, Status status) {
        this.id = id;
        this.status = status;
    }

    public Accounts(long id, Branches branches, Status status, Types types, Valuta valuta, String codIban, Date openDate, Date closeDate, BigDecimal balance, Boolean hiden, Set<Transactions> transactionses, Set<Cards> cardses, Set<CustomerAccount> customerAccounts) {
        this.id = id;
        this.branches = branches;
        this.status = status;
        this.types = types;
        this.valuta = valuta;
        this.codIban = codIban;
        this.openDate = openDate;
        this.closeDate = closeDate;
        this.balance = balance;
        this.hiden = hiden;
        this.transactionses = transactionses;
        this.cardses = cardses;
        this.customerAccounts = customerAccounts;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "brancheId")
    public Branches getBranches() {
        return this.branches;
    }

    public void setBranches(Branches branches) {
        this.branches = branches;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "statusId", nullable = false)
    public Status getStatus() {
        return this.status;
    }

    public void setStatus(Status status) {
        this.status = status;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "typeId")
    public Types getTypes() {
        return this.types;
    }

    public void setTypes(Types types) {
        this.types = types;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "valutaId")
    public Valuta getValuta() {
        return this.valuta;
    }

    public void setValuta(Valuta valuta) {
        this.valuta = valuta;
    }

    @Column(name = "codIban", length = 50)
    public String getCodIban() {
        return this.codIban;
    }

    public void setCodIban(String codIban) {
        this.codIban = codIban;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "openDate", length = 23)
    public Date getOpenDate() {
        return this.openDate;
    }

    public void setOpenDate(Date openDate) {
        this.openDate = openDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "closeDate", length = 23)
    public Date getCloseDate() {
        return this.closeDate;
    }

    public void setCloseDate(Date closeDate) {
        this.closeDate = closeDate;
    }

    @Column(name = "balance", scale = 4)
    public BigDecimal getBalance() {
        return this.balance;
    }

    public void setBalance(BigDecimal balance) {
        this.balance = balance;
    }

    @Column(name = "hiden")
    public Boolean getHiden() {
        return this.hiden;
    }

    public void setHiden(Boolean hiden) {
        this.hiden = hiden;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "accounts")
    public Set<Transactions> getTransactionses() {
        return this.transactionses;
    }

    public void setTransactionses(Set<Transactions> transactionses) {
        this.transactionses = transactionses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "accounts")
    public Set<Cards> getCardses() {
        return this.cardses;
    }

    public void setCardses(Set<Cards> cardses) {
        this.cardses = cardses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "accounts")
    public Set<CustomerAccount> getCustomerAccounts() {
        return this.customerAccounts;
    }

    public void setCustomerAccounts(Set<CustomerAccount> customerAccounts) {
        this.customerAccounts = customerAccounts;
    }

}

package md.ibanc.rm.entities;
// Generated Aug 24, 2016 4:57:31 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Customers generated by hbm2java
 */
@Entity
@Table(name = "Customers", schema = "dbo", catalog = "iBancRM"
)
public class Customers implements java.io.Serializable {

    private long id;
    private City city;
    private Languages languages;
    private Status status;
    private String firstName;
    private String lastName;
    private String personalId;
    private String email;
    private String userName;
    private String password;
    private Date lasstAcces;
    private String adress;
    private String phone;
    private String website;
    private Date expirePassword;
    private Integer unSuccessfulAtempst;
    private String emailCode;
    private Date registeDate;
    private Set<CustomerAccount> customerAccounts = new HashSet<>(0);
    private Set<WrongPassword> wrongPasswords = new HashSet<>(0);
    private Set<SingInOutSessions> singInOutSessionses = new HashSet<>(0);
    private Set<PasswordsHistory> passwordsHistories = new HashSet<>(0);
    private Set<SendMessage> sendMessages = new HashSet<>(0);

    public Customers() {
    }

    public Customers(long id) {
        this.id = id;
    }

    public Customers(long id, City city, Languages languages, Status status, String firstName, String lastName, String personalId, String email, String userName, String password, Date lasstAcces, String adress, String phone, String website, Date expirePassword, Integer unSuccessfulAtempst, String emailCode, Date registeDate, Set<CustomerAccount> customerAccounts, Set<WrongPassword> wrongPasswords, Set<SingInOutSessions> singInOutSessionses, Set<PasswordsHistory> passwordsHistories, Set<SendMessage> sendMessages) {
        this.id = id;
        this.city = city;
        this.languages = languages;
        this.status = status;
        this.firstName = firstName;
        this.lastName = lastName;
        this.personalId = personalId;
        this.email = email;
        this.userName = userName;
        this.password = password;
        this.lasstAcces = lasstAcces;
        this.adress = adress;
        this.phone = phone;
        this.website = website;
        this.expirePassword = expirePassword;
        this.unSuccessfulAtempst = unSuccessfulAtempst;
        this.emailCode = emailCode;
        this.registeDate = registeDate;
        this.customerAccounts = customerAccounts;
        this.wrongPasswords = wrongPasswords;
        this.singInOutSessionses = singInOutSessionses;
        this.passwordsHistories = passwordsHistories;
        this.sendMessages = sendMessages;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cityId")
    public City getCity() {
        return this.city;
    }

    public void setCity(City city) {
        this.city = city;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "langId")
    public Languages getLanguages() {
        return this.languages;
    }

    public void setLanguages(Languages languages) {
        this.languages = languages;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "statusId")
    public Status getStatus() {
        return this.status;
    }

    public void setStatus(Status status) {
        this.status = status;
    }

    @Column(name = "firstName")
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "lastName")
    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name = "personalId", length = 13)
    public String getPersonalId() {
        return this.personalId;
    }

    public void setPersonalId(String personalId) {
        this.personalId = personalId;
    }

    @Column(name = "email", length = 50)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "userName", length = 50)
    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name = "password", length = 50)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "lasstAcces", length = 23)
    public Date getLasstAcces() {
        return this.lasstAcces;
    }

    public void setLasstAcces(Date lasstAcces) {
        this.lasstAcces = lasstAcces;
    }

    @Column(name = "adress")
    public String getAdress() {
        return this.adress;
    }

    public void setAdress(String adress) {
        this.adress = adress;
    }

    @Column(name = "phone", length = 20)
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Column(name = "website", length = 50)
    public String getWebsite() {
        return this.website;
    }

    public void setWebsite(String website) {
        this.website = website;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "expirePassword", length = 23)
    public Date getExpirePassword() {
        return this.expirePassword;
    }

    public void setExpirePassword(Date expirePassword) {
        this.expirePassword = expirePassword;
    }

    @Column(name = "unSuccessfulAtempst")
    public Integer getUnSuccessfulAtempst() {
        return this.unSuccessfulAtempst;
    }

    public void setUnSuccessfulAtempst(Integer unSuccessfulAtempst) {
        this.unSuccessfulAtempst = unSuccessfulAtempst;
    }

    @Column(name = "emailCode", length = 50)
    public String getEmailCode() {
        return this.emailCode;
    }

    public void setEmailCode(String emailCode) {
        this.emailCode = emailCode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "registeDate", length = 23)
    public Date getRegisteDate() {
        return this.registeDate;
    }

    public void setRegisteDate(Date registeDate) {
        this.registeDate = registeDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "customers")
    public Set<CustomerAccount> getCustomerAccounts() {
        return this.customerAccounts;
    }

    public void setCustomerAccounts(Set<CustomerAccount> customerAccounts) {
        this.customerAccounts = customerAccounts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "customers")
    public Set<WrongPassword> getWrongPasswords() {
        return this.wrongPasswords;
    }

    public void setWrongPasswords(Set<WrongPassword> wrongPasswords) {
        this.wrongPasswords = wrongPasswords;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "customers")
    public Set<SingInOutSessions> getSingInOutSessionses() {
        return this.singInOutSessionses;
    }

    public void setSingInOutSessionses(Set<SingInOutSessions> singInOutSessionses) {
        this.singInOutSessionses = singInOutSessionses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "customers")
    public Set<PasswordsHistory> getPasswordsHistories() {
        return this.passwordsHistories;
    }

    public void setPasswordsHistories(Set<PasswordsHistory> passwordsHistories) {
        this.passwordsHistories = passwordsHistories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "customers")
    public Set<SendMessage> getSendMessages() {
        return this.sendMessages;
    }

    public void setSendMessages(Set<SendMessage> sendMessages) {
        this.sendMessages = sendMessages;
    }

}
